if game.PlaceId == 18688206652 then

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

local uis = game:GetService("UserInputService")
local plr = game:GetService("Players").LocalPlayer
local Cui = game:GetService("CoreGui")
local scrn = Instance.new("ScreenGui",Cui)
local wpk = game:GetService("Workspace")

local color = Color3.fromRGB(111, 111, 111)
local asset = "rbxasset://fonts/families/TitilliumWeb.json"

local frame = Instance.new("Frame",scrn)
local corner = Instance.new("UICorner",frame)
frame.AnchorPoint = Vector2.new(0.5,0.5)
frame.Position = UDim2.new(0.111, 0,0.197, 0)
frame.Size = UDim2.new(0, 100,0, 30)
frame.BackgroundColor3 = color
frame.Draggable = true
frame.ZIndex = 4
corner.CornerRadius = UDim.new(0,10)

local button = Instance.new("TextButton",frame)
button.Size = UDim2.new(1,0,1,0)
button.TextSize = 30
button.Text = "toggle"
button.FontFace = Font.new(asset, Enum.FontWeight.SemiBold, Enum.FontStyle.Normal)
button.BackgroundTransparency = 1
button.ZIndex = 5
button.Draggable = false

local Dragging, DragInput, MousePos , StartPos = false

button.InputBegan:Connect(function(i)
	if i.UserInputType == Enum.UserInputType.MouseButton1 or i.UserInputType == Enum.UserInputType.Touch then
		Dragging = true
		MousePos = i.Position
		StartPos = frame.Position
		i.Changed:Connect(function()
			if i.UserInputState == Enum.UserInputState.End then
				Dragging = false
			end
		end)
	end
end)

button.InputChanged:Connect(function(i)
	if i.UserInputType == Enum.UserInputType.MouseMovement or i.UserInputType == Enum.UserInputType.Touch then
		DragInput = i
	end
end)

uis.InputChanged:Connect(function(i)
	if i == DragInput and Dragging then
		local delta = i.Position - MousePos
		frame.Position = UDim2.new(StartPos.X.Scale,StartPos.X.Offset + delta.X, StartPos.Y.Scale, StartPos.Y.Offset + delta.Y)
	end
end)





-- variable
getgenv().mapSelect = {}
getgenv().mapSelected = "/"
getgenv().hitTggl = true
getgenv().Rtraits = true
getgenv().Rfamily = true
getgenv().npcSelect = {}
getgenv().npcSelected = "/"
getgenv().weaponSelect = {}
getgenv().weaponSelected = "/"



-- functions
function hitcom()
    local hum = plr.Character:WaitForChild("Humanoid")
    local backs = plr.Backpack:GetChildren()
    while getgenv().hitTggl == true do
        wait(0.1)
        if getgenv().weaponSelected == "Basic Combat" then
            for i,bs in pairs(backs) do
                if bs.Name == getgenv().weaponSelected then
                    hum:EquipTool(bs)
                end
            end
        else
            for i,weaps in pairs(backs) do
                if weaps.Name == getgenv().weaponSelected then
                    hum:EquipTool(weaps)
                end
            end
        end
    end
end

function traits()
	while getgenv().Rtraits == true do
		game:GetService("ReplicatedStorage").Events.SpinTrait:FireServer("Normal")
		wait(0.1)
	end
	
end

function families()
	while getgenv().Rfamily == true do
		game:GetService("ReplicatedStorage").Events.SpinFamily:FireServer("Normal")
		wait(0.1)
	end
	
end

function traitsSpin()
    local gui = plr.PlayerGui
    local ui = gui:FindFirstChild("Spin")
    ui.Frame.Visible = not ui.Frame.Visible
    
end

function traitsMenu()
        --local plr = game.Players.LocalPlayer
        local gui = plr.PlayerGui
        local store = gui:FindFirstChild("TraitsStorage")
        store.Frame.Visible = not store.Frame.Visible
end

function familyMenu()
    --local plr = game.Players.LocalPlayer
    local gui = plr.PlayerGui
    local store = gui:FindFirstChild("Spin")
    store.Family.Visible = not store.Family.Visible
end




local Window = Fluent:CreateWindow({
    Title = "Zal Hub|Ijul Piece",
    SubTitle = "by me",
    TabWidth = 160,
    Size = UDim2.fromOffset(475, 300),
    Acrylic = false, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind
})

button.MouseButton1Click:Connect(function ()
    Window.Minimized = not Window.Minimized
    Window.Root.Visible = not Window.Minimized
end)

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    tele = Window:AddTab({ Title = "Teleport", Icon = "settings" })
}

local back = plr:WaitForChild("Backpack")
local teal = back:GetChildren()


local weap = Tabs.Main:AddDropdown("Dropdown", {
    Title = "Select Weapon",
    Values = {},
    Multi = false,
    Default = "N/A",
})

for i,tigin in pairs(teal) do
    if tigin:IsA("Tool") then
        table.insert(getgenv().weaponSelect,tigin.Name)
    end
end

weap:SetValues(getgenv().weaponSelect)

weap:OnChanged(function(Value)
    getgenv().weaponSelected = Value
end)

local testhit = Tabs.Main:AddToggle("test", {
    Title = "1 Hit Test",
    Default = false,
    Callback = function(Value)
        getgenv().hitTggl = Value
        hitcom()
    end
})


local item = Tabs.Main:AddSection("Item")

local autotrait = Tabs.Main:AddToggle("test",{
    Title = "Auto Traits",
    Default = false,
    Callback = function(Value)
        getgenv().Rtraits = Value
        traits()
    end
})

Tabs.Main:AddButton({
    Title = "Open Traits Spin",
    Description = "",
    Callback = function()
        traitsSpin()
    end
})

Tabs.Main:AddButton({
    Title = "Open Traits Storage",
    Description = "",
    Callback = function()
        traitsMenu()
    end
})

local autofamily = Tabs.Main:AddToggle("test",{
    Title = "Auto Family",
    Default = false,
    Callback = function(Value)
        getgenv().Rfamily = Value
        families()
    end
})

Tabs.Main:AddButton({
    Title = "Open Family Spin",
    Description = "",
    Callback = function()
        familyMenu()
    end
})


local maps = Tabs.tele:AddDropdown("Dropdown", {
    Title = "Select Place",
    Values = {},
    Multi = false,
    Default = "N/A",
})

local mapfile = wpk.Map.SpawnLocation:GetChildren()

for _,themap in pairs(mapfile) do
    if themap:IsA("Part") then
        table.insert(getgenv().mapSelect,themap.Name)
    end
end


maps:SetValues(getgenv().mapSelect)

maps:OnChanged(function(Value)
    getgenv().mapSelected = Value

end)

Tabs.tele:AddButton({
    Title = "Teleport Place",
    Description = "",
    Callback = function(map)
        map = getgenv().mapSelected
        local plr = game.Players.LocalPlayer.Character.HumanoidRootPart
		for i,place in pairs(mapfile) do
			if place.Name == map then
				plr.CFrame = place.CFrame
			end
		end
        
    end
})

local npctele = Tabs.tele:AddSection("Teleport NPC")

--local testout = npcName(name)

local npcfile = wpk.Map.NPC:GetChildren()

--test.Name


local drpnpc = Tabs.tele:AddDropdown("Dropdown", {
    Title = "Select NPC",
    Values = {},
    Multi = false,
    Default = "N/A",
})

for _,theOne in pairs(npcfile) do
    if theOne:IsA("Model") then
        table.insert(getgenv().npcSelect,theOne.Name)
    end
end

drpnpc:SetValues(getgenv().npcSelect)

drpnpc:OnChanged(function(Value)
    getgenv().npcSelected = Value
end)

Tabs.tele:AddButton({
    Title = "Teleport NPC",
    Description = "",
    Callback = function(npc)
        npc = getgenv().npcSelected
        local plr = game.Players.LocalPlayer.Character.HumanoidRootPart
		for i,mpc in pairs(npcfile) do
			if mpc.Name == npc then
				plr.CFrame = mpc.HumanoidRootPart.CFrame
			end
		end
        
    end
})

end
